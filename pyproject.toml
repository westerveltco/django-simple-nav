[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[project]
authors = [
  {name = "Josh Thomas", email = "josh@joshthomas.dev"}
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Framework :: Django",
  "Framework :: Django :: 4.2",
  "Framework :: Django :: 5.0",
  "Framework :: Django :: 5.1",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython"
]
dependencies = [
  "django>=4.2"
]
description = "A simple, flexible, and extensible navigation menu for Django."
dynamic = ["version"]
keywords = []
license = {file = "LICENSE"}
name = "django-simple-nav"
readme = "README.md"
requires-python = ">=3.9"

[project.optional-dependencies]
docs = [
  "cogapp>=3.4.1",
  "furo>=2024.8.6",
  "myst-parser>=3.0.1",
  "sphinx>=7.1.2",
  "sphinx-autobuild>=2021.3.14",
  "sphinx-autodoc2>=0.5.0",
  "sphinx-copybutton>=0.5.2",
  "sphinx-inline-tabs>=2023.4.21"
]
tests = [
  "faker>=30.3.0",
  "model-bakery>=1.20.0",
  "pytest>=8.3.3",
  "pytest-cov>=5.0.0",
  "pytest-django>=4.9.0",
  "pytest-randomly>=3.15.0",
  "pytest-xdist>=3.6.1"
]
types = [
  "django-stubs>=5.1.0",
  "django-stubs-ext>=5.1.0",
  "mypy>=1.11.2"
]

[project.urls]
Documentation = "https://django-simple-nav.westervelt.dev/"
Issues = "https://github.com/westerveltco/django-simple-nav/issues"
Source = "https://github.com/westerveltco/django-simple-nav"

[tool.basedpyright]
exclude = [
  "**/node_modules",
  "**/__pycache__"
]
include = ["src"]

[tool.bumpver]
commit = true
commit_message = ":bookmark: bump version {old_version} -> {new_version}"
current_version = "0.12.0"
push = false  # set to false for CI
tag = false
version_pattern = "MAJOR.MINOR.PATCH[PYTAGNUM]"

[tool.bumpver.file_patterns]
".copier/package.yml" = [
  'current_version: {version}'
]
"src/django_simple_nav/__init__.py" = [
  '__version__ = "{version}"'
]
"tests/test_version.py" = [
  'assert __version__ == "{version}"'
]

[tool.coverage.paths]
source = ["src"]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "if DEBUG:",
  "if not DEBUG:",
  "if settings.DEBUG:",
  "if TYPE_CHECKING:",
  'def __str__\(self\)\s?\-?\>?\s?\w*\:'
]
fail_under = 75

[tool.coverage.run]
omit = [
  "src/django_simple_nav/migrations/*",
  "tests/*"
]
source = ["django_simple_nav"]

[tool.django-stubs]
django_settings_module = "tests.settings"
strict_settings = false

[tool.djlint]
blank_line_after_tag = "endblock,endpartialdef,extends,load"
blank_line_before_tag = "block,partialdef"
custom_blocks = "partialdef"
ignore = "H031"  # Don't require `meta` tag keywords
indent = 2
profile = "django"

[tool.hatch.build]
exclude = [
  ".*",
  "Justfile"
]

[tool.hatch.build.targets.wheel]
packages = ["src/django_simple_nav"]

[tool.hatch.version]
path = "src/django_simple_nav/__init__.py"

[tool.mypy]
check_untyped_defs = true
exclude = [
  "docs",
  "migrations",
  "tests",
  "venv",
  ".venv"
]
mypy_path = "src/"
no_implicit_optional = true
plugins = [
  "mypy_django_plugin.main"
]
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
ignore_errors = true
ignore_missing_imports = true
module = [
  "*.migrations.*",
  "docs.*",
  "tests.*"
]

[tool.mypy_django_plugin]
ignore_missing_model_attributes = true

[tool.pytest.ini_options]
addopts = "--create-db -n auto --dist loadfile --doctest-modules"
django_find_project = false
norecursedirs = ".* bin build dist *.egg example htmlcov logs node_modules templates venv"
python_files = "tests.py test_*.py *_tests.py"
pythonpath = "src"
testpaths = ["tests"]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".github",
  ".hg",
  ".mypy_cache",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "build",
  "dist",
  "migrations",
  "node_modules",
  "venv"
]
extend-include = ["*.pyi?"]
indent-width = 4
# Same as Black.
line-length = 88
# Assume Python >3.9
target-version = "py39"

[tool.ruff.format]
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
# Like Black, use double quotes for strings.
quote-style = "double"

[tool.ruff.lint]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "I"]
ignore = ["E501", "E741"]  # temporary
select = [
  "B",  # flake8-bugbear
  "E",  # Pycodestyle
  "F",  # Pyflakes
  "I",  # isort
  "UP"  # pyupgrade
]
unfixable = []

[tool.ruff.lint.isort]
force-single-line = true
known-first-party = ["django_simple_nav"]
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.uv]
dev-dependencies = [
  "copier>=9.3.1",
  "copier-templates-extensions>=0.3.0",
  "django-stubs>=5.1.0",
  "django-stubs-ext>=5.1.0",
  "nox[uv]>=2024.10.9",
  "ruff>=0.6.9"
]
